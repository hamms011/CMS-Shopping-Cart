@model TheCakeShop.Models.ViewModels.Pages.PageVM

@{
    ViewBag.Title = "Edit Page";
}

<div class="row">
    <div class="col-lg-12">
        <div class="card-box">

            <script type="text/javascript">
            @if (TempData["SM"] != null)
            {
                <text>
                    swal({
                      type: 'success',
                      title: '@TempData["SM"]',
                      showConfirmButton: false,
                      timer: 2500
                        })
                </text>
            }
            </script>

            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <h4 class="text-center display-4">Edit @Model.Title Page</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Id)

                    <div class="form-group">
                        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "col-2 col-form-label" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Slug, htmlAttributes: new { @class = "col-2 col-form-label" })
                        <div class="col-md-8">
                            @if (Model.Slug == "home")
                            {
                                @Html.EditorFor(model => model.Slug, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            }
                            else
                            {
                                @Html.EditorFor(model => model.Slug, new { htmlAttributes = new { @class = "form-control" } })
                            }
                            @Html.ValidationMessageFor(model => model.Slug, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Body, htmlAttributes: new { @class = "col-2 col-form-label" })
                        <div class="col-md-12">
                            @Html.TextAreaFor(model => model.Body, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Body, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="col-2 col-form-label" for="HasSideBar">Side Bar</label>
                        <div class="col-md-8">
                            <div class="custom-checkbox">
                                @Html.EditorFor(model => model.HasSideBar)
                                @Html.ValidationMessageFor(model => model.HasSideBar, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Edit Page" class="btn btn-success btn-lg" />
                            @Html.ActionLink("Back to Pages", "Index", "Pages", null, new { @class = "btn btn-custom btn-lg" })
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/Scripts/ckeditor/ckeditor.js"></script>

    
    <script>

        CKEDITOR.replace("Body");
        CKEDITOR.config.extraAllowedContent = '*(*)';
        
        CKEDITOR.config.contentsCss = ['/FrontAssets/css/bootstrap.min.css', '/FrontAssets/css/magnific-popup.css', '/FrontAssets/css/font-icons.css', '/FrontAssets/css/sliders.css', '/FrontAssets/css/style.css', '/FrontAssets/css/animate.min.css'];  

        CKEDITOR.scriptLoader.load(['/FrontAssets/js/jquery.min.js', '/FrontAssets/js/bootstrap.min.js', '/FrontAssets/js/plugins.js', '/FrontAssets/js/scripts.js']);

    </script>

}



